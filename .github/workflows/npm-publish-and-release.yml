name: NPM Publish and GitHub Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-github-release:
    needs: build-and-publish
    runs-on: ubuntu-latest
    steps:
      # - name: Checkout code
      #   uses: actions/checkout@v3
      #   with:
      #     fetch-depth: 0

      # - name: Get version from tag
      #   id: get_version
      #   run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      # - name: Setup Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: '18.x'
      # - name: Generate changelog
      #   id: github_release
      #   run: |
      #     # Debug info
      #     echo "Current ref: ${GITHUB_REF}"
      #     echo "Current tag: ${GITHUB_REF#refs/tags/}"

      #     # Get the previous tag to compare against
      #     PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
      #     echo "Previous tag: $PREVIOUS_TAG"

      #     if [ -z "$PREVIOUS_TAG" ]; then
      #       # If no previous tag exists, use the first commit
      #       FROM_REF=$(git rev-list --max-parents=0 HEAD)
      #       echo "No previous tag found, using first commit: $FROM_REF"
      #     else
      #       FROM_REF=$PREVIOUS_TAG
      #       echo "Using previous tag as reference: $FROM_REF"
      #     fi

      #     # Generate changelog and save to file
      #     echo "Running conventional-changelog from=$FROM_REF to=${GITHUB_REF#refs/tags/}"
      #     conventional-changelog -p angular -r 1 --outfile changelog.md --from=$FROM_REF --to=${GITHUB_REF#refs/tags/}

      #     # Debug: Show generated changelog
      #     echo "Generated changelog content:"
      #     cat changelog.md

      #     # Fix for multiline output in GitHub Actions
      #     echo 'changelog<<CHANGELOG_EOF' >> $GITHUB_OUTPUT
      #     cat changelog.md >> $GITHUB_OUTPUT
      #     echo 'CHANGELOG_EOF' >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
